#!/bin/bash
#===================================================================================
#
# FILE: trigger.sh
#
# USAGE: sh trigger.sh <JOB_ID> <JOB_FILE> <LOGGING>
#
# DESCRIPTION: Triggers full sync on nodes parallely using ssh/openssl
#              <JOB_ID> : any string
#              <JOB_FILE> : .job file generated by running collector.sh
#              <LOGGING> : true/false - generates log file per node
#       
#This will spawn the script  actionrunner.sh per each node for ||le execution.
#
# NOTES: Make sure to run the script from enviroment where NE IP are pingable
#        like MSCM server 
#
# AUTHOR: ZPALSRI(srihari.palivela@tcs.com)
# VERSION: 1.0
# CREATED: 15.03.2018 
#
#===================================================================================

if [[ $# -ne 5 ]];then
    echo "Invalid number of parameters"
    echo "trigger.sh <Netsim_server> <job_id> <job_file> <logging> <num_mos>"
    exit
fi

JOB_ID=$2
JOB_FILE=$3
LOGGING=$4
NUM_MOS=$5
NETSIM_SERVER=$1
#----------------------------------------------------------------------
# Spawns action runner per NE by iterating over .job file
#----------------------------------------------------------------------
startTime=`date +%s%3N`
sh sarcollect.sh $NETSIM_SERVER $JOB_ID
SARPID=`cat sarpid.txt`
while read -r line 
do
    PARAMS=$(echo $line | cut -d" " -f 1,2,3,5 ) 
   	sh chunkrunner.sh $PARAMS  $LOGGING $NUM_MOS &
	# sh actionrunner.sh $PARAMS $JOB_ID $LOGGING & 
done< $JOB_FILE

# Wait for all spawned process to complete
wait
endTime=`date +%s%3N`

runtime=`expr $endTime - $startTime`
echo sarstop.sh $NETSIM_SERVER $SARPID $JOB_ID $JOB_ID $runtime
sh sarstop.sh $NETSIM_SERVER $SARPID $JOB_ID $JOB_ID $runtime
echo Num_nodes:$JOB_ID Num_mos:$NUM_MOS >> result.txt

