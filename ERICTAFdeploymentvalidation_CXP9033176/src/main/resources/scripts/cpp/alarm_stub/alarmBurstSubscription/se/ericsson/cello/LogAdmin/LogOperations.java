package se.ericsson.cello.LogAdmin;


/**
* se/ericsson/cello/LogAdmin/LogOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from LogAdmin_F.idl
* Wednesday, July 11, 2018 2:25:14 PM GMT+01:00
*/


//  The Log interface supports the following functions.
public interface LogOperations 
{

  //       function.
  se.ericsson.cello.LogAdmin.OperationalState get_operational_state ();

  //       Returns a struct that reflects the availability status of a log.
  se.ericsson.cello.LogAdmin.AvailabilityStatus get_availability_status ();

  //       Return the name of the log.
  String get_name ();

  //       In parameter filter defines the filter of a log.
  void set_filter (String filter);

  //       the log.
  se.ericsson.cello.LogAdmin.QoSType get_qos ();

  //       log.
  void set_qos (se.ericsson.cello.LogAdmin.QoSType qos);

  //       Returns the size of the log.
  long get_max_size ();

  //       size, an NoMemory exception will be raised.
  void set_max_size (long size) throws se.ericsson.cello.LogAdmin.NoMemory;

  //       maximum size of the log has been reached.
  se.ericsson.cello.LogAdmin.LogFullAction get_log_full_action ();

  //       In parameter action indicates the log full condition.
  void set_log_full_action (se.ericsson.cello.LogAdmin.LogFullAction action);

  //       exception is raised.
  se.ericsson.cello.LogAdmin.LogRecord[] query (String filter, se.ericsson.cello.LogAdmin.IteratorHolder iter) throws se.ericsson.cello.LogAdmin.InvalidConstraint;

  //       If the iterator is not needed a nil object reference is returned.
  se.ericsson.cello.LogAdmin.LogRecord[] retrieve (se.ericsson.cello.LogAdmin.TimeT from_time, int how_many, se.ericsson.cello.LogAdmin.IteratorHolder iter);

  //       returned with the exception.
  void write_records (CosNotification.StructuredEvent[] records) throws se.ericsson.cello.LogAdmin.LogFull;

  //       deleted, the operation returns a value of 0.
  int delete_records_by_id (long[] ids);

  //       Destroy the log.
  boolean destroy_log ();
} // interface LogOperations
