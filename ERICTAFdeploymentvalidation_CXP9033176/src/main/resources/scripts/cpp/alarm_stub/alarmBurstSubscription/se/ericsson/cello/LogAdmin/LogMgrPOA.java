package se.ericsson.cello.LogAdmin;


/**
* se/ericsson/cello/LogAdmin/LogMgrPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from LogAdmin_F.idl
* Wednesday, July 11, 2018 2:25:14 PM GMT+01:00
*/


//  The LogMgr interface provides the following functions.
public abstract class LogMgrPOA extends org.omg.PortableServer.Servant
 implements se.ericsson.cello.LogAdmin.LogMgrOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("create", new java.lang.Integer (0));
    _methods.put ("list_logs", new java.lang.Integer (1));
    _methods.put ("find_log", new java.lang.Integer (2));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  //       exists.
       case 0:  // se/ericsson/cello/LogAdmin/LogMgr/create
       {
         try {
           String log_name = in.read_string ();
           long max_size = in.read_ulonglong ();
           se.ericsson.cello.LogAdmin.QoSType qos = se.ericsson.cello.LogAdmin.QoSTypeHelper.read (in);
           se.ericsson.cello.LogAdmin.LogFullAction full_action = se.ericsson.cello.LogAdmin.LogFullActionHelper.read (in);
           se.ericsson.cello.LogAdmin.Log $result = null;
           $result = this.create (log_name, max_size, qos, full_action);
           out = $rh.createReply();
           se.ericsson.cello.LogAdmin.LogHelper.write (out, $result);
         } catch (se.ericsson.cello.LogAdmin.NoMemory $ex) {
           out = $rh.createExceptionReply ();
           se.ericsson.cello.LogAdmin.NoMemoryHelper.write (out, $ex);
         } catch (se.ericsson.cello.LogAdmin.LogAlreadyExists $ex) {
           out = $rh.createExceptionReply ();
           se.ericsson.cello.LogAdmin.LogAlreadyExistsHelper.write (out, $ex);
         }
         break;
       }


  //       The User can list all log created by the log manager.
       case 1:  // se/ericsson/cello/LogAdmin/LogMgr/list_logs
       {
         String $result[] = null;
         $result = this.list_logs ();
         out = $rh.createReply();
         se.ericsson.cello.LogAdmin.LogListHelper.write (out, $result);
         break;
       }


  //       exception will be raised.
       case 2:  // se/ericsson/cello/LogAdmin/LogMgr/find_log
       {
         try {
           String log_name = in.read_string ();
           se.ericsson.cello.LogAdmin.Log $result = null;
           $result = this.find_log (log_name);
           out = $rh.createReply();
           se.ericsson.cello.LogAdmin.LogHelper.write (out, $result);
         } catch (se.ericsson.cello.LogAdmin.LogNotFound $ex) {
           out = $rh.createExceptionReply ();
           se.ericsson.cello.LogAdmin.LogNotFoundHelper.write (out, $ex);
         }
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:se/ericsson/cello/LogAdmin/LogMgr:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public LogMgr _this() 
  {
    return LogMgrHelper.narrow(
    super._this_object());
  }

  public LogMgr _this(org.omg.CORBA.ORB orb) 
  {
    return LogMgrHelper.narrow(
    super._this_object(orb));
  }


} // class LogMgrPOA
