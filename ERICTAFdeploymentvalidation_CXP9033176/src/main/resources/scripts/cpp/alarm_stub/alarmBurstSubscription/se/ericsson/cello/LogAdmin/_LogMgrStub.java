package se.ericsson.cello.LogAdmin;


/**
* se/ericsson/cello/LogAdmin/_LogMgrStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from LogAdmin_F.idl
* Wednesday, July 11, 2018 2:25:14 PM GMT+01:00
*/


//  The LogMgr interface provides the following functions.
public class _LogMgrStub extends org.omg.CORBA.portable.ObjectImpl implements se.ericsson.cello.LogAdmin.LogMgr
{


  //       exists.
  public se.ericsson.cello.LogAdmin.Log create (String log_name, long max_size, se.ericsson.cello.LogAdmin.QoSType qos, se.ericsson.cello.LogAdmin.LogFullAction full_action) throws se.ericsson.cello.LogAdmin.NoMemory, se.ericsson.cello.LogAdmin.LogAlreadyExists
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("create", true);
                $out.write_string (log_name);
                $out.write_ulonglong (max_size);
                se.ericsson.cello.LogAdmin.QoSTypeHelper.write ($out, qos);
                se.ericsson.cello.LogAdmin.LogFullActionHelper.write ($out, full_action);
                $in = _invoke ($out);
                se.ericsson.cello.LogAdmin.Log $result = se.ericsson.cello.LogAdmin.LogHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:se/ericsson/cello/LogAdmin/NoMemory:1.0"))
                    throw se.ericsson.cello.LogAdmin.NoMemoryHelper.read ($in);
                else if (_id.equals ("IDL:se/ericsson/cello/LogAdmin/LogAlreadyExists:1.0"))
                    throw se.ericsson.cello.LogAdmin.LogAlreadyExistsHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return create (log_name, max_size, qos, full_action        );
            } finally {
                _releaseReply ($in);
            }
  } // create


  //       The User can list all log created by the log manager.
  public String[] list_logs ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("list_logs", true);
                $in = _invoke ($out);
                String $result[] = se.ericsson.cello.LogAdmin.LogListHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return list_logs (        );
            } finally {
                _releaseReply ($in);
            }
  } // list_logs


  //       exception will be raised.
  public se.ericsson.cello.LogAdmin.Log find_log (String log_name) throws se.ericsson.cello.LogAdmin.LogNotFound
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("find_log", true);
                $out.write_string (log_name);
                $in = _invoke ($out);
                se.ericsson.cello.LogAdmin.Log $result = se.ericsson.cello.LogAdmin.LogHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:se/ericsson/cello/LogAdmin/LogNotFound:1.0"))
                    throw se.ericsson.cello.LogAdmin.LogNotFoundHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return find_log (log_name        );
            } finally {
                _releaseReply ($in);
            }
  } // find_log

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:se/ericsson/cello/LogAdmin/LogMgr:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _LogMgrStub
