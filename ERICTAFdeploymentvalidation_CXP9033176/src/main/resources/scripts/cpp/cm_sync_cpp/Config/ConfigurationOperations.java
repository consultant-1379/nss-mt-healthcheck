package Config;


/**
* Config/ConfigurationOperations.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from configuration_G.idl
* Friday, June 1, 2018 12:05:47 PM GMT+01:00
*/


/**
   * Configuration interface
   */
public interface ConfigurationOperations  extends BasicConfig.BasicConfigurationOperations
{

  /**
       * Methods for configurations.
       */
  Config.ConfigRef create_configuration (String name, BasicConfig.Session session) throws BasicConfig.UnsupportedQoS, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  Config.ConfigRef copy_configuration (Config.ConfigRef baseConfiguration, String name, BasicConfig.Session session) throws BasicConfig.UnsupportedQoS, BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  void delete_configuration (Config.ConfigRef configuration, BasicConfig.Session session) throws BasicConfig.UnsupportedQoS, BasicConfig.NotDefined, BasicConfig.NotAccepted, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  Config.ConfigRef get_configuration (int id, BasicConfig.Session session) throws BasicConfig.UnsupportedQoS, BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  Config.ConfigRef get_valid_configuration (BasicConfig.Session session) throws BasicConfig.UnsupportedQoS, BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  Config.ConfigRef[] get_configurations (boolean includeValid, BasicConfig.Session session) throws BasicConfig.UnsupportedQoS, BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  Config.ConfigurationInfo get_configuration_info (Config.ConfigRef configuration, BasicConfig.Session session) throws BasicConfig.UnsupportedQoS, BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  void update (Config.ConfigRef configuration, BasicConfig.NameValue[] optionalArg, BasicConfig.Session session) throws BasicConfig.UnsupportedQoS, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;

  /**
       * Methods for MOs
       */
  BasicConfig.MOInfo get_MO_info (Config.ConfigRef configuration, BasicConfig.MOidpair mo, BasicConfig.Session session) throws BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  BasicConfig.MORef get_MO_parent (Config.ConfigRef configuration, BasicConfig.MOidpair mo, BasicConfig.Session session) throws BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  void get_MO_attributes (Config.ConfigRef configuration, BasicConfig.MOidpair mo, String[] attributeNames, BasicConfig.NameValueSeqHolder attributes, BasicConfig.Session session) throws BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  void set_MO_attributes (Config.ConfigRef configuration, BasicConfig.MOidpair mo, BasicConfig.NameValue[] attributes, BasicConfig.Session session) throws BasicConfig.NotDefined, BasicConfig.NotAccepted, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  BasicConfig.MORef create_MO (Config.ConfigRef configuration, String name, String type, BasicConfig.MOidpair baseMO, BasicConfig.MOidpair sourceMO, BasicConfig.NameValue[] attributes, BasicConfig.MOAssociation[] associations, BasicConfig.Session session) throws BasicConfig.AlreadyDefined, BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  void delete_MO (Config.ConfigRef configuration, BasicConfig.MOidpair baseMO, BasicConfig.MGRef mg, int scope, BasicConfig.Filter filter, BasicConfig.Session session) throws BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  BasicConfig.MORef create_root_MO (Config.ConfigRef configuration, String name, String type, BasicConfig.NameValue[] attributes, BasicConfig.MOAssociation[] associations, BasicConfig.MIBRef mib, BasicConfig.Session session) throws BasicConfig.ProcessingFailure, BasicConfig.SecurityViolation, BasicConfig.NotDefined, BasicConfig.AlreadyDefined;
  BasicConfig.MORef get_root_MO (Config.ConfigRef configuration, BasicConfig.MIBRef mib, BasicConfig.Session session) throws BasicConfig.ProcessingFailure, BasicConfig.SecurityViolation, BasicConfig.NotDefined;
  BasicConfig.IterRef set_MO (Config.ConfigRef configuration, BasicConfig.MOidpair baseMO, BasicConfig.MGRef mg, int scope, BasicConfig.Filter filter, BasicConfig.NameValue[] attributes, BasicConfig.Session session) throws BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  BasicConfig.IterRef get_MO_containment_short (Config.ConfigRef configuration, BasicConfig.MOidpair baseMO, BasicConfig.MGRef mg, int scope, BasicConfig.Filter filter, org.omg.CORBA.IntHolder count, BasicConfig.MORefSeqHolder result, BasicConfig.Session session) throws BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  BasicConfig.ExtIterRef get_MO_containment_full (Config.ConfigRef configuration, BasicConfig.MOidpair baseMO, BasicConfig.MGRef mg, int scope, BasicConfig.Filter filter, org.omg.CORBA.IntHolder count, BasicConfig.ExtMORefSeqHolder result, BasicConfig.Session session) throws BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  BasicConfig.AttrIterRef get_attr_MO_containment (Config.ConfigRef configuration, BasicConfig.MOidpair baseMO, int scope, BasicConfig.Filter filter, String[] attributeNames, BasicConfig.Session session) throws BasicConfig.NotDefined, BasicConfig.NotAccepted, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  BasicConfig.IterRef get_MO_association_short (Config.ConfigRef configuration, BasicConfig.MOidpair baseMO, String roleName, BasicConfig.MGRef mg, int scope, BasicConfig.Filter filter, org.omg.CORBA.IntHolder count, BasicConfig.MORefSeqHolder result, BasicConfig.Session session) throws BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  BasicConfig.ExtIterRef get_MO_association_full (Config.ConfigRef configuration, BasicConfig.MOidpair baseMO, String roleName, BasicConfig.MGRef mg, int scope, BasicConfig.Filter filter, org.omg.CORBA.IntHolder count, BasicConfig.ExtMORefSeqHolder result, BasicConfig.Session session) throws BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  BasicConfig.AttrIterRef get_attr_MO_association (Config.ConfigRef configuration, BasicConfig.MOidpair baseMO, String roleName, int scope, BasicConfig.Filter filter, String[] attributeNames, BasicConfig.Session session) throws BasicConfig.NotDefined, BasicConfig.NotAccepted, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  boolean is_existing (Config.ConfigRef configuration, BasicConfig.MOidpair mo, BasicConfig.Session session) throws BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  void create_association (Config.ConfigRef configuration, BasicConfig.MOidpair fromMO, BasicConfig.MOAssociation[] associations, BasicConfig.Session session) throws BasicConfig.UnsupportedQoS, BasicConfig.NotDefined, BasicConfig.AlreadyDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  void delete_association (Config.ConfigRef configuration, BasicConfig.MOidpair fromMO, BasicConfig.MOAssociation[] associations, BasicConfig.Session session) throws BasicConfig.UnsupportedQoS, BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  void lock_MO (Config.ConfigRef configuration, BasicConfig.MOidpair mo, BasicConfig.MGRef mg, BasicConfig.Session session) throws BasicConfig.UnsupportedQoS, BasicConfig.NotDefined, BasicConfig.AlreadyDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  void unlock_MO (Config.ConfigRef configuration, BasicConfig.MOidpair mo, BasicConfig.MGRef mg, BasicConfig.Session session) throws BasicConfig.UnsupportedQoS, BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
  boolean is_locked_MO (Config.ConfigRef configuration, BasicConfig.MOidpair mo, BasicConfig.MGRef mg, BasicConfig.Session session) throws BasicConfig.UnsupportedQoS, BasicConfig.NotDefined, BasicConfig.SecurityViolation, BasicConfig.ProcessingFailure;
} // interface ConfigurationOperations
