#!/bin/bash
#===================================================================================
#
# FILE: trigger.sh
#
# USAGE: sh trigger.sh <JOB_ID> <JOB_FILE> <LOGGING>
#
# DESCRIPTION: Triggers full sync on nodes parallely using ssh/openssl
#              <JOB_ID> : any string
#              <JOB_FILE> : .job file generated by running collector.sh
#              <LOGGING> : true/false - generates log file per node
#       
#This will spawn the script  actionrunner.sh per each node for ||le execution.
#
# NOTES: Make sure to run the script from enviroment where NE IP are pingable
#        like MSCM server 
#
# AUTHOR: ZPALSRI(srihari.palivela@tcs.com)
# VERSION: 1.0
# CREATED: 15.03.2018 
#
#===================================================================================

JOB_ID="PMSUB01"
JOB_FILE="allNodes.job"
NUM_MOS=$1
NUM_NODES=$2
NAME_SPACE=$3
LOGGING=true
NETSIM_SERVER=$4

if [[ $# -ne 4 ]];then
    echo "Invalid number of parameters"
    echo "Usage : sh $0 <NUM_MOS> <NUM_NODES> <NAME_SPACE> <NETSIM_SERVER>"
    exit 1
fi

JOB_ID=1
sh sarcollect.sh $NETSIM_SERVER $JOB_ID
SARPID=`cat sarpid.txt`

#----------------------------------------------------------------------
# Spawns action runner per NE by iterating over .job file
#----------------------------------------------------------------------

PROCESSES=""
SPACE=" "
i=0
while read -r line ||  [[ -ne "$line" ]];
do
	PARAMS=$(echo $line | cut -d" " -f 1,2,3 ) 
   	sh chunkrunner.sh $PARAMS ${NAME_SPACE} $JOB_ID $LOGGING $NUM_NODES $NUM_MOS  & 
   	PROCESSES=$PROCESSES$!$SPACE
	i=$((i+1))
	if [[ $i -ge $NUM_NODES ]];then
		break
	fi
done < $JOB_FILE

# Wait for all spawned process to complete
echo "Processesss "$PROCESSES
wait $PROCESSES

sleep 100
sh sarstop.sh $NETSIM_SERVER $SARPID $JOB_ID

