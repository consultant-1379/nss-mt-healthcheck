#!/bin/bash
#===================================================================================
#
# FILE: trigger.sh
#
# USAGE: sh trigger.sh <JOB_ID> <JOB_FILE> <LOGGING>
#
# DESCRIPTION: Triggers full sync on nodes parallely using ssh/openssl
#              <JOB_ID> : any string
#              <JOB_FILE> : .job file generated by running collector.sh
#              <LOGGING> : true/false - generates log file per node
#       
#This will spawn the script  actionrunner.sh per each node for ||le execution.
#
# NOTES: Make sure to run the script from enviroment where NE IP are pingable
#        like MSCM server 
#
# AUTHOR: ZPALSRI(srihari.palivela@tcs.com)
# VERSION: 1.0
# CREATED: 15.03.2018 
#
#===================================================================================

JOB_FILE="allNodes.job"
NUM_NODES=$1
LOGGING=false

if [[ $# -ne 1 ]];then
    echo "Invalid number of parameters"
    echo "Usage : sh $0 <NUM_NODES>"
    exit 1
fi

#----------------------------------------------------------------------
# Spawns action runner per NE by iterating over .job file
#----------------------------------------------------------------------

PROCESSES=""
SPACE=" "
i=0

while IFS='' read -r line || [[ -n "$line" ]]; 
#while read -r line &&  [[ $i < ${NUM_NODES} ]];
do
	PARAMS=$(echo $line | cut -d" " -f 1,2) 
   	sh unsubscribe.sh $PARAMS $LOGGING & 
   	PROCESSES=$PROCESSES$!$SPACE
	i=$((i+1))
	if [[ $i -ge $NUM_NODES ]];then
	break
	fi
done < $JOB_FILE

# Wait for all spawned process to complete
echo "Processesss "$PROCESSES
wait $PROCESSES




PROCESSES=""
SPACE=" "
i=0

while IFS='' read -r line || [[ -n "$line" ]]; 
#while read -r line &&  [[ $i < ${NUM_NODES} ]];
do
        PARAMS=$(echo $line | cut -d" " -f 1,2)
        sh cleanTransactions.sh $PARAMS $LOGGING &
        PROCESSES=$PROCESSES$!$SPACE
        i=$((i+1))
        if [[ $i -ge $NUM_NODES ]];then
        break
        fi
        echo "LINE --------------> "$line
        echo "Spawned $i processes of $NUM_NODES"
done < $JOB_FILE

echo "----------------> $i $NUM_NODES"
# Wait for all spawned process to complete
echo "Processesss "$PROCESSES
wait $PROCESSES




sleep 10
 
