#!/bin/bash
#===================================================================================
#
# FILE: logger.sh
#
# USAGE: sh logger.sh
#
# DESCRIPTION: Triggers full sync on nodes parallely using ssh/openssli
#              <JOB_ID> : any string
#              <JOB_FILE> : .job file generated by running collector.sh
#              <LOGGING> : true/false - generates log file per node
#       
# AUTHOR: ZPALSRI(srihari.palivela@tcs.com)
# VERSION: 1.0
# CREATED: 15.03.2018 
#
#===================================================================================

LOG_START_TIMES="58,13,28,43" 
LOG_STOP_TIMES="06,21,36,51"

ROP_LOG="rop.log"

LOG="logger.log"

CPU_LOG="cpu.log"

rm -f ${LOG}

CURR_PID=""
CPU_PID=""

## Start logging at start times and stop at stopping times
## log name syntax : <Hour>_<MIN>_trigger.log

echo_time() {
    date +"%R : $*"
}

while [ true ];
do
	CURR_MIN=`date +%M`
	echo "Current Min : ${CURR_MIN}" >> $LOG
  	echo ${LOG_START_TIMES} | grep ${CURR_MIN} >/dev/null
	if [[ $? -eq 0 ]]; then
		if [[ ! -z "$CURR_PID" ]];then
			kill ${CURR_PID}
		fi
		if [[ ! -z "$CPU_PID" ]];then
                        kill ${CPU_PID}
                fi
	
		HM=`date +%d_%m_%H_%M`
		/netsim/inst/logtool -f > "${HM}_${ROP_LOG}" &
		CURR_PID=$!
		sar 1 > "${HM}_${CPU_LOG}" &
    		CPU_PID=$!
		
		echo "Starting logging @ ${HM} - Result : $? , PID : ${CURR_PID}" >> $LOG
	fi
	echo ${LOG_STOP_TIMES} | grep ${CURR_MIN} > /dev/null
	if [[ $? -eq 0 ]]; then
                if [[ ! -z "$CURR_PID" ]];then
			ps -efl | grep logtool | grep -v "grep" | awk '{print $4}' | xargs kill
                        kill ${CURR_PID}
			echo "Stopping logging started @ ${HM} - Result :$?">> $LOG
        	fi
		if [[ ! -z "$CPU_PID" ]];then
			kill ${CPU_PID}
		fi
	fi
	diskfree=`df -h | head -2 | tail -1`
	echo_time "${diskfree}" >> "disk_free"
	sleep 60
done
