#!/bin/bash
#===================================================================================
#
# FILE: trigger.sh
#
# USAGE: sh trigger.sh <JOB_ID> <JOB_FILE> <LOGGING>
#
# DESCRIPTION: Triggers full sync on nodes parallely using ssh/openssl
#              <JOB_ID> : any string
#              <JOB_FILE> : .job file generated by running collector.sh
#              <LOGGING> : true/false - generates log file per node
#       
#This will spawn the script  actionrunner.sh per each node for ||le execution.
#
# NOTES: Make sure to run the script from enviroment where NE IP are pingable
#        like MSCM server 
#
# AUTHOR: ZPALSRI(srihari.palivela@tcs.com)
# VERSION: 1.0
# CREATED: 15.03.2018 
#
#===================================================================================

if [[ $# -ne 1 ]];then
    echo "Invalid number of parameters"
    echo " USAGE: sh trigger.sh <NUM_NODES> "
    exit
fi

JOB_FILE="allNodes.job"
LOGGING=false

NUM_NODES=$1


sarlogFile="sarlogFile.sar"

#generate and delete prmnresponse file
sh generateRequestPrmn.sh 
sh generateResponsePrmn.sh 

sleep 10


#starting sar
sar 1 > $sarlogFile &
sar_pid=$!
echo " Child Pid =" $sar_pid


#----------------------------------------------------------------------
# Spawns action runner per NE by iterating over .job file
#----------------------------------------------------------------------

PROCESSES=""
SPACE=" "
i=0

while IFS='' read -r line || [[ -n "$line" ]]; 
#while read -r line &&  [[ $i < ${NUM_NODES} ]];
do
	PARAMS=$(echo $line | cut -d" " -f 1,2,3,4)
   	sh actionrunner.sh $PARAMS &
   	PROCESSES=$PROCESSES$SPACE$!
	i=$((i+1))
	if [[ $i -ge $NUM_NODES ]];then
	break
	fi
	echo "LINE --------------> "$line
	echo "Spawned $i processes of $NUM_NODES"
done < $JOB_FILE

echo "Processesss "$PROCESSES
wait $PROCESSES

`kill -9 ${sar_pid}`
echo "Killed Sar"
sleep 60

#generate prmn file
sh generateRequestPrmn.sh
sh generateResponsePrmn.sh

